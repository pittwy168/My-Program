Leetcode373_ Find K Pairs with Smallest Sums
You are given two integer arrays nums1 and nums2 sorted in ascending order and an integer k.
Define a pair (u,v) which consists of one element from the first array and one element from the second array.
Find the k pairs (u1,v1),(u2,v2) ...(uk,vk) with the smallest sums.
Example 1:
Given nums1 = [1,7,11], nums2 = [2,4,6],  k = 3
Return: [1,2],[1,4],[1,6]
The first 3 pairs are returned from the sequence:
[1,2],[1,4],[1,6],[7,2],[7,4],[11,2],[7,6],[11,4],[11,6]
Example 2:
Given nums1 = [1,1,2], nums2 = [1,2,3],  k = 2
Return: [1,1],[1,1]
The first 2 pairs are returned from the sequence:
[1,1],[1,1],[1,2],[2,1],[1,2],[2,2],[1,3],[1,3],[2,3]
Example 3:
Given nums1 = [1,2], nums2 = [3],  k = 3 
Return: [1,3],[2,3]
All possible pairs are returned from the sequence:
[1,3],[2,3]
class Solution(object):
    def kSmallestPairs(self, nums1, nums2, k):
        n1,n2=len(nums1),len(nums2)
        k=min(k,n1*n2)
        if k==0:
            return []
        h=[[float('Inf'),float('Inf')] for i in range(k)]
        st,en=0,k-1
        mid=(st+en)/2
        for i in range(n1):
            st=i
            for j in range(n2):
                if nums1[i]+nums2[j]>=h[k-1][0]+h[k-1][1]:
                    break
                while en>=st:
                    mid=(en+st)/2
                    if nums1[i]+nums2[j]>h[mid][0]+h[mid][1]:
                        st=mid+1
                    elif nums1[i]+nums2[j]<h[mid][0]+h[mid][1]:
                        en=mid-1
                    else:
                        st=mid
                        break
                h.pop(-1)
                h.insert(st,[nums1[i],nums2[j]])
                en=k-1
        return h 
class Solution {
public:
    vector<pair<int, int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) {
        int n1=nums1.size(); int n2=nums2.size();
        int m_num=pow(2,30)-1;
        std::vector<std::pair<int, int> > empty_set;
        k=k>n1*n2?n1*n2:k;
        if(k==0) return empty_set;
        std::vector<std::pair<int, int> >  h(k,pair<int, int>(m_num,m_num));
        int st=0; int en=k-1; int mid=(st+en)/2;
        for(int i=0;i<n1;i++){
            st=i; for(int j=0;j<n2;j++){
                if (nums1[i]+nums2[j]>=h[k-1].first+h[k-1].second) break;
                while(en>=st){
                    mid=(en+st)/2;
                    if (nums1[i]+nums2[j]>h[mid].first+h[mid].second)st=mid+1;
                    else if (nums1[i]+nums2[j]<h[mid].first+h[mid].second) en=mid-1;
                    else {st=mid; break;}
                }
                for(int t=k-1;t>st;t--){h[t].first=h[t-1].first;h[t].second=h[t-1].second;}
                h[st].first=nums1[i]; h[st].second=nums2[j]; en=k-1;
            }
        }return h;
    }
};

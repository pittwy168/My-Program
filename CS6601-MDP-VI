"""
Value Iteration
"""

def v(matrix, reward, terminal, lamma=0.7, prob=0.7):
    n = len(matrix)
    m = len(matrix[0])
    new_matrix=[[0. for i in range(m)] for j in range(n)]
    for i in range(n):
        for j in range(m):
            if [i,j] in terminal:
                new_matrix[i][j] = reward[i][j]
                continue
            v=float('-Inf')
            for x in [[0,1],[0,-1],[-1,0],[1,0]]:
                a1,b1 = i+x[0],j+x[1]
                a2,b2 = i-x[0],j-x[1]
                if a1<0: a1=0
                if a2<0: a2=0
                if a1>n-1: a1=n-1
                if a2>n-1: a2=n-1
                if b1<0: b1=0
                if b2<0: b2=0
                if b1>m-1: b1=m-1
                if b2>m-1: b2=m-1
                v = max(v, lamma*(prob*matrix[a1][b1]+(1.0-prob)*matrix[a2][b2])+reward[i][j])
            new_matrix[i][j] = v
    return new_matrix


reward = [[-100.,10.,10. ,100.],[-5.,10.,-5.,10.],[-5.,-30.,10.,-30.]]
terminal =[[0,0],[0,3]]
tt=new_matrix=[[0. for i in range(4)] for j in range(3)]

matrix1 = v(tt, reward, terminal, lamma=0.7, prob=0.7)
matrix2 = v(matrix1, reward, terminal, lamma=0.7, prob=0.7)
matrix3 = v(matrix2, reward, terminal, lamma=0.7, prob=0.7)
print matrix1
print matrix2
print matrix3

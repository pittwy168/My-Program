46. Permutations
Given a collection of distinct numbers, return all possible permutations. 
For example,
[1,2,3] have the following permutations:
[
  [1,2,3],
  [1,3,2],
  [2,1,3],
  [2,3,1],
  [3,1,2],
  [3,2,1]
]
class Solution:
    """
    @param nums: A list of Integers.
    @return: A list of permutations.
    """
    def permute(self, nums):
        if not nums:
            return []
        n=len(nums)
        if n==0:
            return []
        elif n==1:
            return [[nums[0]]]
        re=[]
        for x in self.permute(nums[:n-1]):
            re.append([nums[n-1]]+x)
            for i in range(1,n-1):
                re.append(x[:i]+[nums[n-1]]+x[i:])
            re.append([nums[n-1]]+x)
        return re
